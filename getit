#! /bin/sh
#
# collect Healpix and healpy source and data files, 
#  before packing them up for a release (see ./pack)
#

healpytag="1.9.1"
healpygit=0 # 1: uses GIT, 0: uses tar.gz
healpyrepo="https://github.com/healpy/healpy.git"
#healpyarchive="https://github.com/healpy/healpy/archive/"
#healpyarchive="https://pypi.python.org/packages/source/h/healpy/"
healpyarchive="https://github.com/healpy/healpy/releases/download/${healpytag}/"
#healpyarchive="/Users/hivon/healpy/"
##
mixed=1
if [ "$mixed" = "1" ]; then
    healpixbranch="trunk"
    healpixbranch_cxx="branches/branch_v330r807"
    healpixbranch_java=${healpixbranch}
else
    #healpixbranch="branches/branch_v320r670"
    healpixbranch="trunk"
    healpixbranch_cxx=${healpixbranch}
    healpixbranch_java=${healpixbranch}
fi
healpixrepo="svn://svn.code.sf.net/p/healpix/code/" # read-only
#healpixrepo="https://healpix.svn.sourceforge.net/svnroot/healpix/"
#
WRKDIR="/tmp"
#
current=`grep -v '#' ./Version`
version=${current}
printf "Enter version number ($current) "
read answer
[ "x$answer" != "x" ] && version="$answer"
VERSION=$version

echo "Version: ${VERSION}    in ${WRKDIR}"
if [ ${healpygit} = 1 ] ; then
    echo "healpy:   ${healpyrepo}   ${healpytag}"
else
    echo "healpy:   ${healpyarchive}   ${healpytag}"
fi
echo "healpix:  ${healpixrepo}${healpixbranch}"
[ ${healpixbranch_cxx} != ${healpixbranch} ] && echo "    C++:  ${healpixrepo}${healpixbranch_cxx}"
[ ${healpixbranch_java} != ${healpixbranch} ] && echo "   java:  ${healpixrepo}${healpixbranch_java}"
printf "Do you want to proceed (y/n) [n]: "
read answer
doit=0
[ "x$answer" = "xy" ] && doit=1

if [ ${doit} = 1 ] ; then
    cd ${WRKDIR}

    \rm -rf             ${WRKDIR}/Healpix_${VERSION}
    \rm -rf             ${WRKDIR}/healpy

    cd ${WRKDIR}
    svn co     ${healpixrepo}${healpixbranch}               Healpix_${VERSION}
    if [ ${healpixbranch_cxx} != ${healpixbranch} ] ; then
	echo "-------------------- C++ ------------------"
	\rm -rf Healpix_${VERSION}/src/cxx
	svn co ${healpixrepo}${healpixbranch_cxx}/src/cxx   Healpix_${VERSION}/src/cxx
    fi
    if [ ${healpixbranch_java} != ${healpixbranch} ] ; then
	echo "-------------------- Java ------------------"
	\rm -rf Healpix_${VERSION}/src/java
	svn co ${healpixrepo}${healpixbranch_java}/src/java Healpix_${VERSION}/src/java
    fi

    echo "---------------------- Healpy ----------------"
    if [ ${healpygit} = 1 ] ; then
	git clone ${healpyrepo}  healpy 
	cd healpy 
	git checkout ${healpytag} 
	git branch
    else
	if [ "${healpyarchive:0:4}" = "http" ] ; then
	    wget ${healpyarchive}healpy-${healpytag}.tar.gz  --no-check-certificate -O healpy-${healpytag}.tar.gz
	else
	    echo ${healpyarchive}healpy-${healpytag}.tar.gz
	    ls -l ${healpyarchive}healpy-${healpytag}.tar.gz
	    cp ${healpyarchive}healpy-${healpytag}.tar.gz .
	fi
	tar -xvzpf healpy-${healpytag}.tar.gz
	mv healpy-${healpytag} healpy
    fi


    cd ${WRKDIR}
    cp -pr healpy Healpix_${VERSION}/src
    cd Healpix_${VERSION}/src/healpy

    \rm -rf .git*
    
    if [ -d healpixsubmodule/src/cxx/autotools ] ; then # version 1.7* and above
	cd  healpixsubmodule/src/cxx/autotools
	\ln -sf ../../../../../cxx .
	for dir in Healpix_cxx c_utils cxxsupport libfftpack libsharp ; do
	    echo ${dir}
	    \rm -r ${dir}
	    \ln -sf cxx/${dir} .
	done
    elif [ -d healpixcxx ] ; then # deprecated
	\rm -rf healpixcxx .git*
	mkdir -p healpixcxx/src
	cd healpixcxx/src
	ln -s ../../../cxx .
    fi

    cd ${WRKDIR}
fi

exit

